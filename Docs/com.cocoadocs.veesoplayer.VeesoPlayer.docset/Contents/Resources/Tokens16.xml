<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/APSVASTBannerConfiguration.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/APSVASTBannerConfiguration</TokenIdentifier>
			<Abstract type="html">Holds all configuration parameters for the banner ads displayed.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
            
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setMaxSize:</TokenIdentifier>
			<Abstract type="html">The maximum allowed size for a non-linear ad. Non-linear ads that define sizes larger than this will be truncated.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGSize maxSize</Declaration>
			
			
			<Anchor>//api/name/maxSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/maxSize</TokenIdentifier>
			<Abstract type="html">The maximum allowed size for a non-linear ad. Non-linear ads that define sizes larger than this will be truncated.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGSize maxSize</Declaration>
			
			
			<Anchor>//api/name/maxSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/maxSize</TokenIdentifier>
			<Abstract type="html">The maximum allowed size for a non-linear ad. Non-linear ads that define sizes larger than this will be truncated.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGSize maxSize</Declaration>
			
			
			<Anchor>//api/name/maxSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setStretchToMaxSize:</TokenIdentifier>
			<Abstract type="html">Defines if non-linear ads should be stretched to the defined bannerMaxSize, should they declare a size smaller than that.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL stretchToMaxSize</Declaration>
			
			
			<Anchor>//api/name/stretchToMaxSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/stretchToMaxSize</TokenIdentifier>
			<Abstract type="html">Defines if non-linear ads should be stretched to the defined bannerMaxSize, should they declare a size smaller than that.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL stretchToMaxSize</Declaration>
			
			
			<Anchor>//api/name/stretchToMaxSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/stretchToMaxSize</TokenIdentifier>
			<Abstract type="html">Defines if non-linear ads should be stretched to the defined bannerMaxSize, should they declare a size smaller than that.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL stretchToMaxSize</Declaration>
			
			
			<Anchor>//api/name/stretchToMaxSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setPosition:</TokenIdentifier>
			<Abstract type="html">Defines how a non-linear banner overlay should be placed relative to the player surface.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaOverlayPosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/position</TokenIdentifier>
			<Abstract type="html">Defines how a non-linear banner overlay should be placed relative to the player surface.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaOverlayPosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/position</TokenIdentifier>
			<Abstract type="html">Defines how a non-linear banner overlay should be placed relative to the player surface.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaOverlayPosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setFadeInDuration:</TokenIdentifier>
			<Abstract type="html">Defines the fade-in animation duration for non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGFloat fadeInDuration</Declaration>
			
			
			<Anchor>//api/name/fadeInDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/fadeInDuration</TokenIdentifier>
			<Abstract type="html">Defines the fade-in animation duration for non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGFloat fadeInDuration</Declaration>
			
			
			<Anchor>//api/name/fadeInDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/fadeInDuration</TokenIdentifier>
			<Abstract type="html">Defines the fade-in animation duration for non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGFloat fadeInDuration</Declaration>
			
			
			<Anchor>//api/name/fadeInDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setDefaultAdBreakDuration:</TokenIdentifier>
			<Abstract type="html">Defines the default number of seconds that a non-linear ad will be kept on display. This can be overridden by VAST ad configuration.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int defaultAdBreakDuration</Declaration>
			
			
			<Anchor>//api/name/defaultAdBreakDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/defaultAdBreakDuration</TokenIdentifier>
			<Abstract type="html">Defines the default number of seconds that a non-linear ad will be kept on display. This can be overridden by VAST ad configuration.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int defaultAdBreakDuration</Declaration>
			
			
			<Anchor>//api/name/defaultAdBreakDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/defaultAdBreakDuration</TokenIdentifier>
			<Abstract type="html">Defines the default number of seconds that a non-linear ad will be kept on display. This can be overridden by VAST ad configuration.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int defaultAdBreakDuration</Declaration>
			
			
			<Anchor>//api/name/defaultAdBreakDuration</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setSkipOffset:</TokenIdentifier>
			<Abstract type="html">Defines the default number of seconds after which the non-linear ad close button becomes active.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int skipOffset</Declaration>
			
			
			<Anchor>//api/name/skipOffset</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/skipOffset</TokenIdentifier>
			<Abstract type="html">Defines the default number of seconds after which the non-linear ad close button becomes active.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int skipOffset</Declaration>
			
			
			<Anchor>//api/name/skipOffset</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/skipOffset</TokenIdentifier>
			<Abstract type="html">Defines the default number of seconds after which the non-linear ad close button becomes active.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int skipOffset</Declaration>
			
			
			<Anchor>//api/name/skipOffset</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setShowCloseButton:</TokenIdentifier>
			<Abstract type="html">Indicates whether a close button should be displayed on top of non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL showCloseButton</Declaration>
			
			
			<Anchor>//api/name/showCloseButton</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/showCloseButton</TokenIdentifier>
			<Abstract type="html">Indicates whether a close button should be displayed on top of non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL showCloseButton</Declaration>
			
			
			<Anchor>//api/name/showCloseButton</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/showCloseButton</TokenIdentifier>
			<Abstract type="html">Indicates whether a close button should be displayed on top of non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL showCloseButton</Declaration>
			
			
			<Anchor>//api/name/showCloseButton</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonImage:</TokenIdentifier>
			<Abstract type="html">Defines the image that should be displayed in the non-linear ads close button, instead of the default progress wheel.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIImage *closeButtonImage</Declaration>
			
			
			<Anchor>//api/name/closeButtonImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonImage</TokenIdentifier>
			<Abstract type="html">Defines the image that should be displayed in the non-linear ads close button, instead of the default progress wheel.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIImage *closeButtonImage</Declaration>
			
			
			<Anchor>//api/name/closeButtonImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonImage</TokenIdentifier>
			<Abstract type="html">Defines the image that should be displayed in the non-linear ads close button, instead of the default progress wheel.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIImage *closeButtonImage</Declaration>
			
			
			<Anchor>//api/name/closeButtonImage</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonBackgroundColor:</TokenIdentifier>
			<Abstract type="html">Defines the background color for the close button displayed on top of non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonBackgroundColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonBackgroundColor</TokenIdentifier>
			<Abstract type="html">Defines the background color for the close button displayed on top of non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonBackgroundColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonBackgroundColor</TokenIdentifier>
			<Abstract type="html">Defines the background color for the close button displayed on top of non-linear ads.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonBackgroundColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonXColor:</TokenIdentifier>
			<Abstract type="html">Defines the color for the X symbol in the center of the close button.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonXColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonXColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonXColor</TokenIdentifier>
			<Abstract type="html">Defines the color for the X symbol in the center of the close button.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonXColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonXColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonXColor</TokenIdentifier>
			<Abstract type="html">Defines the color for the X symbol in the center of the close button.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonXColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonXColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonSize:</TokenIdentifier>
			<Abstract type="html">Indicates the lenght of a side of the non-linear ads close button square.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int closeButtonSize</Declaration>
			
			
			<Anchor>//api/name/closeButtonSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonSize</TokenIdentifier>
			<Abstract type="html">Indicates the lenght of a side of the non-linear ads close button square.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int closeButtonSize</Declaration>
			
			
			<Anchor>//api/name/closeButtonSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonSize</TokenIdentifier>
			<Abstract type="html">Indicates the lenght of a side of the non-linear ads close button square.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int closeButtonSize</Declaration>
			
			
			<Anchor>//api/name/closeButtonSize</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonInitialAlpha:</TokenIdentifier>
			<Abstract type="html">Indicates the opacity of the non-linear ads close button before it is activated for receiving taps.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float closeButtonInitialAlpha</Declaration>
			
			
			<Anchor>//api/name/closeButtonInitialAlpha</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonInitialAlpha</TokenIdentifier>
			<Abstract type="html">Indicates the opacity of the non-linear ads close button before it is activated for receiving taps.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float closeButtonInitialAlpha</Declaration>
			
			
			<Anchor>//api/name/closeButtonInitialAlpha</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonInitialAlpha</TokenIdentifier>
			<Abstract type="html">Indicates the opacity of the non-linear ads close button before it is activated for receiving taps.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float closeButtonInitialAlpha</Declaration>
			
			
			<Anchor>//api/name/closeButtonInitialAlpha</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonFinalAlpha:</TokenIdentifier>
			<Abstract type="html">Indicates the opacity of the non-linear close button after it has been activated for receiving taps.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float closeButtonFinalAlpha</Declaration>
			
			
			<Anchor>//api/name/closeButtonFinalAlpha</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonFinalAlpha</TokenIdentifier>
			<Abstract type="html">Indicates the opacity of the non-linear close button after it has been activated for receiving taps.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float closeButtonFinalAlpha</Declaration>
			
			
			<Anchor>//api/name/closeButtonFinalAlpha</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonFinalAlpha</TokenIdentifier>
			<Abstract type="html">Indicates the opacity of the non-linear close button after it has been activated for receiving taps.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float closeButtonFinalAlpha</Declaration>
			
			
			<Anchor>//api/name/closeButtonFinalAlpha</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonProgressColor:</TokenIdentifier>
			<Abstract type="html">The color of the circular bar that indicates the currently elapsed time until the close button can be tapped.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonProgressColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonProgressColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonProgressColor</TokenIdentifier>
			<Abstract type="html">The color of the circular bar that indicates the currently elapsed time until the close button can be tapped.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonProgressColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonProgressColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonProgressColor</TokenIdentifier>
			<Abstract type="html">The color of the circular bar that indicates the currently elapsed time until the close button can be tapped.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonProgressColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonProgressColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonTrackColor:</TokenIdentifier>
			<Abstract type="html">The color of the circular bar that indicates the total time until the close button can be tapped.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonTrackColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonTrackColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonTrackColor</TokenIdentifier>
			<Abstract type="html">The color of the circular bar that indicates the total time until the close button can be tapped.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonTrackColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonTrackColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonTrackColor</TokenIdentifier>
			<Abstract type="html">The color of the circular bar that indicates the total time until the close button can be tapped.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *closeButtonTrackColor</Declaration>
			
			
			<Anchor>//api/name/closeButtonTrackColor</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/setCloseButtonOffset:</TokenIdentifier>
			<Abstract type="html">Defines the offset that the non-linear ads close button should have from the top-right edge of the banner itself.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGPoint closeButtonOffset</Declaration>
			
			
			<Anchor>//api/name/closeButtonOffset</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSVASTBannerConfiguration/closeButtonOffset</TokenIdentifier>
			<Abstract type="html">Defines the offset that the non-linear ads close button should have from the top-right edge of the banner itself.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGPoint closeButtonOffset</Declaration>
			
			
			<Anchor>//api/name/closeButtonOffset</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSVASTBannerConfiguration/closeButtonOffset</TokenIdentifier>
			<Abstract type="html">Defines the offset that the non-linear ads close button should have from the top-right edge of the banner itself.</Abstract>
			<DeclaredIn>APSVASTBannerConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGPoint closeButtonOffset</Declaration>
			
			
			<Anchor>//api/name/closeButtonOffset</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
        
	</File>
</Tokens>