<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/APSMediaUnit.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/APSMediaUnit</TokenIdentifier>
			<Abstract type="html">The APSMediaUnit class represents a clip that&apos;s ready to be rendered by the player. A media unit also references an array of APSMediaOverlay objects, defining the overlays connected to the unit.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/initWithURL:</TokenIdentifier>
			<Abstract type="html">Initializes a media unit object.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (APSMediaUnit *)initWithURL:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The video clip URL.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new APSMediaUnit object</Abstract></ReturnValue>
			<Anchor>//api/name/initWithURL:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/addOverlay:</TokenIdentifier>
			<Abstract type="html">Adds an APSMediaOverlay object to the unit, to be rendered together.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (void)addOverlay:(APSMediaOverlay *)overlay</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlay</Name>
					<Abstract type="html">The APSMediaOverlay object to be connected to the unit.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addOverlay:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setOverlays:</TokenIdentifier>
			<Abstract type="html">Connects an array of APSMediaOverlay objects to the current unit.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (void)setOverlays:(NSArray *)overlays</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlays</Name>
					<Abstract type="html">An array of APSMediaOverlay objects to be connected to the unit.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setOverlays:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/clearOverlays</TokenIdentifier>
			<Abstract type="html">Removes all currently connected overlays.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (void)clearOverlays</Declaration>
			
			
			<Anchor>//api/name/clearOverlays</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/overlays</TokenIdentifier>
			<Abstract type="html">Returns an array containing all APSMediaOverlay objects currently connected to the unit.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (NSArray *)overlays</Declaration>
			
			<ReturnValue><Abstract type="html">An array of APSMediaOverlay objects.</Abstract></ReturnValue>
			<Anchor>//api/name/overlays</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/addEvent:</TokenIdentifier>
			<Abstract type="html">Adds an object that implements the APSMediaEvent protocol to the unit.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (void)addEvent:(APSMediaEvent *)overlay</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlay</Name>
					<Abstract type="html">The event to be connected to the unit.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addEvent:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setEvents:</TokenIdentifier>
			<Abstract type="html">Connects an array of objects that implement the APSMediaEvent protocol to the current unit.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (void)setEvents:(NSArray *)events</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlays</Name>
					<Abstract type="html">An array of events to be connected to the unit.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setEvents:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/clearEvents</TokenIdentifier>
			<Abstract type="html">Removes all currently connected events.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (void)clearEvents</Declaration>
			
			
			<Anchor>//api/name/clearEvents</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/events</TokenIdentifier>
			<Abstract type="html">Returns an array containing all event objects currently connected to the unit.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>- (NSArray *)events</Declaration>
			
			<ReturnValue><Abstract type="html">An array of objects that implement the APSMediaEvent protocol.</Abstract></ReturnValue>
			<Anchor>//api/name/events</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setUrl:</TokenIdentifier>
			<Abstract type="html">The video clip URL.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSURL *url</Declaration>
			
			
			<Anchor>//api/name/url</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/url</TokenIdentifier>
			<Abstract type="html">The video clip URL.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSURL *url</Declaration>
			
			
			<Anchor>//api/name/url</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/url</TokenIdentifier>
			<Abstract type="html">The video clip URL.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSURL *url</Declaration>
			
			
			<Anchor>//api/name/url</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setInitialPlaybackTime:</TokenIdentifier>
			<Abstract type="html">Initial video playback time in seconds.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSTimeInterval initialPlaybackTime</Declaration>
			
			
			<Anchor>//api/name/initialPlaybackTime</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/initialPlaybackTime</TokenIdentifier>
			<Abstract type="html">Initial video playback time in seconds.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSTimeInterval initialPlaybackTime</Declaration>
			
			
			<Anchor>//api/name/initialPlaybackTime</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/initialPlaybackTime</TokenIdentifier>
			<Abstract type="html">Initial video playback time in seconds.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSTimeInterval initialPlaybackTime</Declaration>
			
			
			<Anchor>//api/name/initialPlaybackTime</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setControlsDisplay:</TokenIdentifier>
			<Abstract type="html">Defines how the controls bar will be displayed for the unit. See APSMediaControlsDisplay for possible values.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaControlsDisplay controlsDisplay</Declaration>
			
			
			<Anchor>//api/name/controlsDisplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/controlsDisplay</TokenIdentifier>
			<Abstract type="html">Defines how the controls bar will be displayed for the unit. See APSMediaControlsDisplay for possible values.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaControlsDisplay controlsDisplay</Declaration>
			
			
			<Anchor>//api/name/controlsDisplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/controlsDisplay</TokenIdentifier>
			<Abstract type="html">Defines how the controls bar will be displayed for the unit. See APSMediaControlsDisplay for possible values.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaControlsDisplay controlsDisplay</Declaration>
			
			
			<Anchor>//api/name/controlsDisplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setManagerType:</TokenIdentifier>
			<Abstract type="html">Assigns a unit manager to the current unit. See APSUnitManagerProtocol for more information.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *managerType</Declaration>
			
			
			<Anchor>//api/name/managerType</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/managerType</TokenIdentifier>
			<Abstract type="html">Assigns a unit manager to the current unit. See APSUnitManagerProtocol for more information.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *managerType</Declaration>
			
			
			<Anchor>//api/name/managerType</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/managerType</TokenIdentifier>
			<Abstract type="html">Assigns a unit manager to the current unit. See APSUnitManagerProtocol for more information.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *managerType</Declaration>
			
			
			<Anchor>//api/name/managerType</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setControlsParameters:</TokenIdentifier>
			<Abstract type="html">The configuration for the controls bar overlay.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSDictionary *controlsParameters</Declaration>
			
			
			<Anchor>//api/name/controlsParameters</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/controlsParameters</TokenIdentifier>
			<Abstract type="html">The configuration for the controls bar overlay.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSDictionary *controlsParameters</Declaration>
			
			
			<Anchor>//api/name/controlsParameters</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/controlsParameters</TokenIdentifier>
			<Abstract type="html">The configuration for the controls bar overlay.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSDictionary *controlsParameters</Declaration>
			
			
			<Anchor>//api/name/controlsParameters</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setScalingMode:</TokenIdentifier>
			<Abstract type="html">The video clip scaling mode, relative to the player surface. See Apple&apos;s documentation for more details on MPMovieScalingMode. Defaults to MPMovieScalingModeNone.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MPMovieScalingMode scalingMode</Declaration>
			
			
			<Anchor>//api/name/scalingMode</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/scalingMode</TokenIdentifier>
			<Abstract type="html">The video clip scaling mode, relative to the player surface. See Apple&apos;s documentation for more details on MPMovieScalingMode. Defaults to MPMovieScalingModeNone.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MPMovieScalingMode scalingMode</Declaration>
			
			
			<Anchor>//api/name/scalingMode</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/scalingMode</TokenIdentifier>
			<Abstract type="html">The video clip scaling mode, relative to the player surface. See Apple&apos;s documentation for more details on MPMovieScalingMode. Defaults to MPMovieScalingModeNone.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MPMovieScalingMode scalingMode</Declaration>
			
			
			<Anchor>//api/name/scalingMode</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setTrackingURLs:</TokenIdentifier>
			<Abstract type="html">This dictionary defines all URLs that need to be notified of specific events from the unit&apos;s lifecycle. The keys are event constants, as defined in APSMediaPlayer, and the values are NSArrays containing NSURL objects.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *trackingURLs</Declaration>
			
			
			<Anchor>//api/name/trackingURLs</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/trackingURLs</TokenIdentifier>
			<Abstract type="html">This dictionary defines all URLs that need to be notified of specific events from the unit&apos;s lifecycle. The keys are event constants, as defined in APSMediaPlayer, and the values are NSArrays containing NSURL objects.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *trackingURLs</Declaration>
			
			
			<Anchor>//api/name/trackingURLs</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/trackingURLs</TokenIdentifier>
			<Abstract type="html">This dictionary defines all URLs that need to be notified of specific events from the unit&apos;s lifecycle. The keys are event constants, as defined in APSMediaPlayer, and the values are NSArrays containing NSURL objects.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *trackingURLs</Declaration>
			
			
			<Anchor>//api/name/trackingURLs</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setBuffet:</TokenIdentifier>
			<Abstract type="html">An array of other media units to be played instead of the current one, should an error be encountered. The unit at index 0 has the highest priority.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableArray *buffet</Declaration>
			
			
			<Anchor>//api/name/buffet</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/buffet</TokenIdentifier>
			<Abstract type="html">An array of other media units to be played instead of the current one, should an error be encountered. The unit at index 0 has the highest priority.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableArray *buffet</Declaration>
			
			
			<Anchor>//api/name/buffet</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/buffet</TokenIdentifier>
			<Abstract type="html">An array of other media units to be played instead of the current one, should an error be encountered. The unit at index 0 has the highest priority.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableArray *buffet</Declaration>
			
			
			<Anchor>//api/name/buffet</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setPinchToFullscreen:</TokenIdentifier>
			<Abstract type="html">Defines if pinch-to-fullscreen should be allowed.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL pinchToFullscreen</Declaration>
			
			
			<Anchor>//api/name/pinchToFullscreen</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/pinchToFullscreen</TokenIdentifier>
			<Abstract type="html">Defines if pinch-to-fullscreen should be allowed.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL pinchToFullscreen</Declaration>
			
			
			<Anchor>//api/name/pinchToFullscreen</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/pinchToFullscreen</TokenIdentifier>
			<Abstract type="html">Defines if pinch-to-fullscreen should be allowed.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL pinchToFullscreen</Declaration>
			
			
			<Anchor>//api/name/pinchToFullscreen</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setShouldAutoplay:</TokenIdentifier>
			<Abstract type="html">Defines if the unit should start playing as soon as it loads or wait for a play command.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAutoplay</Declaration>
			
			
			<Anchor>//api/name/shouldAutoplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/shouldAutoplay</TokenIdentifier>
			<Abstract type="html">Defines if the unit should start playing as soon as it loads or wait for a play command.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAutoplay</Declaration>
			
			
			<Anchor>//api/name/shouldAutoplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/shouldAutoplay</TokenIdentifier>
			<Abstract type="html">Defines if the unit should start playing as soon as it loads or wait for a play command.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAutoplay</Declaration>
			
			
			<Anchor>//api/name/shouldAutoplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setCanReplay:</TokenIdentifier>
			<Abstract type="html">Defines whether the player can replay the current unit or not after it has ended in the playlist.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL canReplay</Declaration>
			
			
			<Anchor>//api/name/canReplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/canReplay</TokenIdentifier>
			<Abstract type="html">Defines whether the player can replay the current unit or not after it has ended in the playlist.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL canReplay</Declaration>
			
			
			<Anchor>//api/name/canReplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/canReplay</TokenIdentifier>
			<Abstract type="html">Defines whether the player can replay the current unit or not after it has ended in the playlist.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL canReplay</Declaration>
			
			
			<Anchor>//api/name/canReplay</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setDebug:</TokenIdentifier>
			<Abstract type="html">Toggle to enable logs.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/debug</TokenIdentifier>
			<Abstract type="html">Toggle to enable logs.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/debug</TokenIdentifier>
			<Abstract type="html">Toggle to enable logs.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setMetadata:</TokenIdentifier>
			<Abstract type="html">Additional unit information.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/metadata</TokenIdentifier>
			<Abstract type="html">Additional unit information.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/metadata</TokenIdentifier>
			<Abstract type="html">Additional unit information.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/setSeekHandling:</TokenIdentifier>
			<Abstract type="html">Defines how the unit should render multiple ad breaks that have been seeked over by the user.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) APSHandleSeekEvent seekHandling</Declaration>
			
			
			<Anchor>//api/name/seekHandling</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaUnit/seekHandling</TokenIdentifier>
			<Abstract type="html">Defines how the unit should render multiple ad breaks that have been seeked over by the user.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) APSHandleSeekEvent seekHandling</Declaration>
			
			
			<Anchor>//api/name/seekHandling</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaUnit/seekHandling</TokenIdentifier>
			<Abstract type="html">Defines how the unit should render multiple ad breaks that have been seeked over by the user.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) APSHandleSeekEvent seekHandling</Declaration>
			
			
			<Anchor>//api/name/seekHandling</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/APSMediaUnit/scalingModeFromString:</TokenIdentifier>
			<Abstract type="html">Converts a string format to a MPMovieScalingMode value. See Apple&apos;s documentation for more details on MPMovieScalingMode.</Abstract>
			<DeclaredIn>APSMediaUnit.h</DeclaredIn>
			
			<Declaration>+ (MPMovieScalingMode)scalingModeFromString:(NSString *)string</Declaration>
			<Parameters>
				<Parameter>
					<Name>string</Name>
					<Abstract type="html">A string format to be converted.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A MPMovieScalingMode value.</Abstract></ReturnValue>
			<Anchor>//api/name/scalingModeFromString:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
	</File>
</Tokens>