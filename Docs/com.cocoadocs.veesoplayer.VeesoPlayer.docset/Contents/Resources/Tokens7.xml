<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/APSMediaOverlay.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/APSMediaOverlay</TokenIdentifier>
			<Abstract type="html">APSMediaOverlay describes any overlay that the APSMediaPlayer instance needs to render during playback.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setType:</TokenIdentifier>
			<Abstract type="html">Overlay type. The values that can be used with this property are usually constants defined by each individual overlay controller</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/type</TokenIdentifier>
			<Abstract type="html">Overlay type. The values that can be used with this property are usually constants defined by each individual overlay controller</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/type</TokenIdentifier>
			<Abstract type="html">Overlay type. The values that can be used with this property are usually constants defined by each individual overlay controller</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setParameters:</TokenIdentifier>
			<Abstract type="html">Overlay parameters. Implementation-specific to overlay controllers.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *parameters</Declaration>
			
			
			<Anchor>//api/name/parameters</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/parameters</TokenIdentifier>
			<Abstract type="html">Overlay parameters. Implementation-specific to overlay controllers.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *parameters</Declaration>
			
			
			<Anchor>//api/name/parameters</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/parameters</TokenIdentifier>
			<Abstract type="html">Overlay parameters. Implementation-specific to overlay controllers.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *parameters</Declaration>
			
			
			<Anchor>//api/name/parameters</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setPosition:</TokenIdentifier>
			<Abstract type="html">Describes the position the overlay should take when placed on-screen by the player. See APSMediaOverlayPosition for available values.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaOverlayPosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/position</TokenIdentifier>
			<Abstract type="html">Describes the position the overlay should take when placed on-screen by the player. See APSMediaOverlayPosition for available values.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaOverlayPosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/position</TokenIdentifier>
			<Abstract type="html">Describes the position the overlay should take when placed on-screen by the player. See APSMediaOverlayPosition for available values.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaOverlayPosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setZIndex:</TokenIdentifier>
			<Abstract type="html">The order of the overlay in the current view stack.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int zIndex</Declaration>
			
			
			<Anchor>//api/name/zIndex</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/zIndex</TokenIdentifier>
			<Abstract type="html">The order of the overlay in the current view stack.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int zIndex</Declaration>
			
			
			<Anchor>//api/name/zIndex</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/zIndex</TokenIdentifier>
			<Abstract type="html">The order of the overlay in the current view stack.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) int zIndex</Declaration>
			
			
			<Anchor>//api/name/zIndex</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setWidth:</TokenIdentifier>
			<Abstract type="html">The width of the overlay. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total width (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/width</TokenIdentifier>
			<Abstract type="html">The width of the overlay. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total width (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/width</TokenIdentifier>
			<Abstract type="html">The width of the overlay. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total width (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setHeight:</TokenIdentifier>
			<Abstract type="html">The height of the overlay. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total height (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/height</TokenIdentifier>
			<Abstract type="html">The height of the overlay. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total height (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/height</TokenIdentifier>
			<Abstract type="html">The height of the overlay. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total height (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setAbsoluteOffsetX:</TokenIdentifier>
			<Abstract type="html">The overlay&apos;s absolute horizontal offset, relative to the current origin. The current origin is determined by the overlay&apos;s position parameter, while the positive direction is always toward the center of the player surface. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total width (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *absoluteOffsetX</Declaration>
			
			
			<Anchor>//api/name/absoluteOffsetX</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/absoluteOffsetX</TokenIdentifier>
			<Abstract type="html">The overlay&apos;s absolute horizontal offset, relative to the current origin. The current origin is determined by the overlay&apos;s position parameter, while the positive direction is always toward the center of the player surface. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total width (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *absoluteOffsetX</Declaration>
			
			
			<Anchor>//api/name/absoluteOffsetX</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/absoluteOffsetX</TokenIdentifier>
			<Abstract type="html">The overlay&apos;s absolute horizontal offset, relative to the current origin. The current origin is determined by the overlay&apos;s position parameter, while the positive direction is always toward the center of the player surface. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total width (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *absoluteOffsetX</Declaration>
			
			
			<Anchor>//api/name/absoluteOffsetX</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setAbsoluteOffsetY:</TokenIdentifier>
			<Abstract type="html">The overlay&apos;s absolute vertical offset, relative to the current origin. The current origin is determined by the overlay&apos;s position parameter, while the positive direction is always toward the center of the player surface. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total height (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *absoluteOffsetY</Declaration>
			
			
			<Anchor>//api/name/absoluteOffsetY</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/absoluteOffsetY</TokenIdentifier>
			<Abstract type="html">The overlay&apos;s absolute vertical offset, relative to the current origin. The current origin is determined by the overlay&apos;s position parameter, while the positive direction is always toward the center of the player surface. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total height (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *absoluteOffsetY</Declaration>
			
			
			<Anchor>//api/name/absoluteOffsetY</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/absoluteOffsetY</TokenIdentifier>
			<Abstract type="html">The overlay&apos;s absolute vertical offset, relative to the current origin. The current origin is determined by the overlay&apos;s position parameter, while the positive direction is always toward the center of the player surface. Supports pixels (e.g.: @&quot;320&quot;) or percentages, relative to the total height (e.g.: @&quot;50%&quot;).</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *absoluteOffsetY</Declaration>
			
			
			<Anchor>//api/name/absoluteOffsetY</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setFadeInDuration:</TokenIdentifier>
			<Abstract type="html">The duration (in seconds) for the fade in effect of the overlay, when it is placed on and taken off screen.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGFloat fadeInDuration</Declaration>
			
			
			<Anchor>//api/name/fadeInDuration</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/fadeInDuration</TokenIdentifier>
			<Abstract type="html">The duration (in seconds) for the fade in effect of the overlay, when it is placed on and taken off screen.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGFloat fadeInDuration</Declaration>
			
			
			<Anchor>//api/name/fadeInDuration</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/fadeInDuration</TokenIdentifier>
			<Abstract type="html">The duration (in seconds) for the fade in effect of the overlay, when it is placed on and taken off screen.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) CGFloat fadeInDuration</Declaration>
			
			
			<Anchor>//api/name/fadeInDuration</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setRemoveWhenHidden:</TokenIdentifier>
			<Abstract type="html">Defines if the overlay should be removed from memory when its&apos; opacity becomes zero.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL removeWhenHidden</Declaration>
			
			
			<Anchor>//api/name/removeWhenHidden</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/removeWhenHidden</TokenIdentifier>
			<Abstract type="html">Defines if the overlay should be removed from memory when its&apos; opacity becomes zero.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL removeWhenHidden</Declaration>
			
			
			<Anchor>//api/name/removeWhenHidden</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/removeWhenHidden</TokenIdentifier>
			<Abstract type="html">Defines if the overlay should be removed from memory when its&apos; opacity becomes zero.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL removeWhenHidden</Declaration>
			
			
			<Anchor>//api/name/removeWhenHidden</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setParentUnit:</TokenIdentifier>
			<Abstract type="html">After being added to a APSMediaUnit object, a reference to this parent can be found here.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) APSMediaUnit *parentUnit</Declaration>
			
			
			<Anchor>//api/name/parentUnit</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/parentUnit</TokenIdentifier>
			<Abstract type="html">After being added to a APSMediaUnit object, a reference to this parent can be found here.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) APSMediaUnit *parentUnit</Declaration>
			
			
			<Anchor>//api/name/parentUnit</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/parentUnit</TokenIdentifier>
			<Abstract type="html">After being added to a APSMediaUnit object, a reference to this parent can be found here.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) APSMediaUnit *parentUnit</Declaration>
			
			
			<Anchor>//api/name/parentUnit</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setController:</TokenIdentifier>
			<Abstract type="html">A refence to the overlay controller object. This is set by the player, on the overlay&apos;s initial render.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaPlayerOverlayController *controller</Declaration>
			
			
			<Anchor>//api/name/controller</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/controller</TokenIdentifier>
			<Abstract type="html">A refence to the overlay controller object. This is set by the player, on the overlay&apos;s initial render.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaPlayerOverlayController *controller</Declaration>
			
			
			<Anchor>//api/name/controller</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/controller</TokenIdentifier>
			<Abstract type="html">A refence to the overlay controller object. This is set by the player, on the overlay&apos;s initial render.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) APSMediaPlayerOverlayController *controller</Declaration>
			
			
			<Anchor>//api/name/controller</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/setMetadata:</TokenIdentifier>
			<Abstract type="html">Additional overlay information.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaOverlay/metadata</TokenIdentifier>
			<Abstract type="html">Additional overlay information.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaOverlay/metadata</TokenIdentifier>
			<Abstract type="html">Additional overlay information.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSMutableDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/APSMediaOverlay/positionFromString:</TokenIdentifier>
			<Abstract type="html">Converts a string format to a APSMediaOverlayPosition value.</Abstract>
			<DeclaredIn>APSMediaOverlay.h</DeclaredIn>
			
			<Declaration>+ (APSMediaOverlayPosition)positionFromString:(NSString *)position</Declaration>
			<Parameters>
				<Parameter>
					<Name>position</Name>
					<Abstract type="html">The position of the overlay. Possible values are:
- &quot;top&quot;
- &quot;topLeft&quot;
- &quot;topRight&quot;
- &quot;bottomLeft&quot;
- &quot;bottomRight&quot;
- &quot;bottom&quot;
- &quot;fullscreen&quot;</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The APSMediaOverlayPosition value coresponding to the string format.</Abstract></ReturnValue>
			<Anchor>//api/name/positionFromString:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
	</File>
</Tokens>