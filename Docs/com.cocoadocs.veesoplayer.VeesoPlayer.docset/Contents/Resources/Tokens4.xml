<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/APSMediaBuilder.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/APSMediaBuilder</TokenIdentifier>
			<Abstract type="html">The APSMediaBuilder assists in creating playlists of fully configurable APSMediaUnits, together with attached, configurable APSMediaOverlays, using JSON files or using a NSDictionary, both following the same structure.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/APSMediaBuilder/unitFromDictionary:</TokenIdentifier>
			<Abstract type="html">Factory method to generate new instance of APSMediaUnit via NSDictionary configuration.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>+ (APSMediaUnit *)unitFromDictionary:(NSDictionary *)unitConfigurations</Declaration>
			<Parameters>
				<Parameter>
					<Name>unitConfigurations</Name>
					<Abstract type="html">Dictionary unit configuration.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of APSMediaUnit or nil if error.</Abstract></ReturnValue>
			<Anchor>//api/name/unitFromDictionary:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/APSMediaBuilder/overlayFromDictionary:</TokenIdentifier>
			<Abstract type="html">Factory method to generate new instance of APSMediaOverlay via NSDictionary configuration.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>+ (APSMediaOverlay *)overlayFromDictionary:(NSDictionary *)overlayConfigurations</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlayConfigurations</Name>
					<Abstract type="html">Dictionary overlay configuration.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of APSMediaOverlay or nil if error.</Abstract></ReturnValue>
			<Anchor>//api/name/overlayFromDictionary:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/initWithMediaUnit:</TokenIdentifier>
			<Abstract type="html">Initializes builder with a playlist of a single media unit.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithMediaUnit:(APSMediaUnit *)contentUnit</Declaration>
			<Parameters>
				<Parameter>
					<Name>contentUnit</Name>
					<Abstract type="html">APSMediaUnit object to be played.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">APSMediaBuilder object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithMediaUnit:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/initWithMediaUnits:</TokenIdentifier>
			<Abstract type="html">Initializes builder with a playlist of media units.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithMediaUnits:(NSArray *)contentUnits</Declaration>
			<Parameters>
				<Parameter>
					<Name>contentUnits</Name>
					<Abstract type="html">Array of APSMediaUnit objects to be played.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">APSMediaBuilder object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithMediaUnits:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/configureFromURL:</TokenIdentifier>
			<Abstract type="html">Configures the builder from a JSON structure.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (BOOL)configureFromURL:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL of the JSON structure to load. This can be a remote file or a local file.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES on succes.</Abstract></ReturnValue>
			<Anchor>//api/name/configureFromURL:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/configureFromURL:onComplete:</TokenIdentifier>
			<Abstract type="html">Configures the builder asynchronously from a JSON structure.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (void)configureFromURL:(NSURL *)url onComplete:(void ( ^ ) ( ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL of the JSON structure to load. This can be a remote file or a local file.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to be executed after configuration is finished.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/configureFromURL:onComplete:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/configureFromData:</TokenIdentifier>
			<Abstract type="html">Configures the builder from a NSData object.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (BOOL)configureFromData:(NSData *)data</Declaration>
			<Parameters>
				<Parameter>
					<Name>data</Name>
					<Abstract type="html">Configuration data - UTF8 encoded.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES on succes.</Abstract></ReturnValue>
			<Anchor>//api/name/configureFromData:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/configureFromDictionary:</TokenIdentifier>
			<Abstract type="html">Configures the builder from a NSDictionary object.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (BOOL)configureFromDictionary:(NSDictionary *)configuration</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">The configuration dictionary.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES on succes.</Abstract></ReturnValue>
			<Anchor>//api/name/configureFromDictionary:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/setContentUnits:</TokenIdentifier>
			<Abstract type="html">Array containing the main content APSMediaUnits that will make up the playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *contentUnits</Declaration>
			
			
			<Anchor>//api/name/contentUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/contentUnits</TokenIdentifier>
			<Abstract type="html">Array containing the main content APSMediaUnits that will make up the playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *contentUnits</Declaration>
			
			
			<Anchor>//api/name/contentUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaBuilder/contentUnits</TokenIdentifier>
			<Abstract type="html">Array containing the main content APSMediaUnits that will make up the playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *contentUnits</Declaration>
			
			
			<Anchor>//api/name/contentUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/setBumperUnits:</TokenIdentifier>
			<Abstract type="html">Array containing APSMediaUnits that will be scheduled before ones in contentUnits in the generated playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *bumperUnits</Declaration>
			
			
			<Anchor>//api/name/bumperUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/bumperUnits</TokenIdentifier>
			<Abstract type="html">Array containing APSMediaUnits that will be scheduled before ones in contentUnits in the generated playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *bumperUnits</Declaration>
			
			
			<Anchor>//api/name/bumperUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaBuilder/bumperUnits</TokenIdentifier>
			<Abstract type="html">Array containing APSMediaUnits that will be scheduled before ones in contentUnits in the generated playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *bumperUnits</Declaration>
			
			
			<Anchor>//api/name/bumperUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/setExitUnits:</TokenIdentifier>
			<Abstract type="html">Array containing APSMediaUnits that will be scheduled after ones in contentUnits in the generated playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *exitUnits</Declaration>
			
			
			<Anchor>//api/name/exitUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/exitUnits</TokenIdentifier>
			<Abstract type="html">Array containing APSMediaUnits that will be scheduled after ones in contentUnits in the generated playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *exitUnits</Declaration>
			
			
			<Anchor>//api/name/exitUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaBuilder/exitUnits</TokenIdentifier>
			<Abstract type="html">Array containing APSMediaUnits that will be scheduled after ones in contentUnits in the generated playlist.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSArray *exitUnits</Declaration>
			
			
			<Anchor>//api/name/exitUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/setUserAgent:</TokenIdentifier>
			<Abstract type="html">The user agent that should be used when making HTTP requests.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *userAgent</Declaration>
			
			
			<Anchor>//api/name/userAgent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/userAgent</TokenIdentifier>
			<Abstract type="html">The user agent that should be used when making HTTP requests.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *userAgent</Declaration>
			
			
			<Anchor>//api/name/userAgent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaBuilder/userAgent</TokenIdentifier>
			<Abstract type="html">The user agent that should be used when making HTTP requests.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSString *userAgent</Declaration>
			
			
			<Anchor>//api/name/userAgent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/setDebugMode:</TokenIdentifier>
			<Abstract type="html">This property enables or disables console logging on all generated units.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debugMode</Declaration>
			
			
			<Anchor>//api/name/debugMode</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/debugMode</TokenIdentifier>
			<Abstract type="html">This property enables or disables console logging on all generated units.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debugMode</Declaration>
			
			
			<Anchor>//api/name/debugMode</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/APSMediaBuilder/debugMode</TokenIdentifier>
			<Abstract type="html">This property enables or disables console logging on all generated units.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debugMode</Declaration>
			
			
			<Anchor>//api/name/debugMode</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/mediaUnits</TokenIdentifier>
			<Abstract type="html">Returns a generated playlist of APSMediaUnits, based on builder configuration and registered plugins.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (NSArray *)mediaUnits</Declaration>
			
			<ReturnValue><Abstract type="html">An array of APSMediaUnits.</Abstract></ReturnValue>
			<Anchor>//api/name/mediaUnits</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/requestMediaUnitsWithCompletionBlock:</TokenIdentifier>
			<Abstract type="html">Asynchronously generates a playlist of APSMediaUnits, based on builder configuration and registered plugins.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (void)requestMediaUnitsWithCompletionBlock:(void ( ^ ) ( NSArray *))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The block to be executed when playlist is generated.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requestMediaUnitsWithCompletionBlock:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/APSMediaBuilder/addPlugin:</TokenIdentifier>
			<Abstract type="html">Registers a new plugin.</Abstract>
			<DeclaredIn>APSMediaBuilder.h</DeclaredIn>
			
			<Declaration>- (void)addPlugin:(NSObject&lt;APSMediaBuilderPlugin&gt; *)plugin</Declaration>
			<Parameters>
				<Parameter>
					<Name>plugin</Name>
					<Abstract type="html">The new plugin object. Must implement APSMediaBuilderPlugin.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addPlugin:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
	</File>
</Tokens>